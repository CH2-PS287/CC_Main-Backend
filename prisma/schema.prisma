// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  userData UserData?
  userFood UserFood[]
  userExercise UserExercise[]
  userWeight UserWeight[]

  @@map("users")
}

model UserData {
  id String @id @default(uuid())
  full_name String
	birth_date DateTime
	height Float
	weight Float
	gender Gender
	recommended_calorie Int

  user User @relation(fields: [userId], references: [id])
  userId String @unique

  @@map("user_data")
}

model Food {
  id String @id @default(uuid())
  name String
  calorie Float
  mineral Float
  protein Float
  fiber Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userFood UserFood[]

  @@map("foods")
}

model Exercise {
  id String @id @default(uuid())
  name String
  calorie Float
  unit String

  createdAt DateTime @default(now())

  userExercise UserExercise[]

  @@map("exercises")
}

model UserFood {
  id String @id @default(uuid())
  timestamp DateTime @default(now())
  amount Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  userId String

  food Food @relation(fields: [foodId], references: [id])
  foodId String

  @@map("user_foods")
}

model UserExercise {
  id String @id @default(uuid())
  timestamp DateTime @default(now())
  amount Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  userId String

  exercise Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId String

  @@map("user_exercises")
}

model UserWeight {
  id String @id @default(uuid())
  timestamp DateTime @default(now())
  weight Float
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  userId String

  @@map("user_weights")
}

enum Gender {
  MALE
  FEMALE
}
