name: main-backend-cloud-run

on:
  push:
    branches:
      - master
      - main

env:
  PROJECT_ID: ${{ secrets.CLOUD_RUN_PROJECT_NAME }}
  REGION: asia-southeast2
  # project-name but it can be anything you want
  REPO_NAME: cc-main-backend
  INSTANCE_CONNECTION_NAME: ${{ secrets.INSTANCE_CONNECTION_NAME }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASS: ${{ secrets.DB_PASS }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}

jobs:
  build-and-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Authenticate with Google Cloud
      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT }}"

      # Setup gcloud CLI/SDK
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and tag the docker image
        run: |-
          docker build . --tag gcr.io/$PROJECT_ID/$REPO_NAME:$GITHUB_SHA

      - name: Push the image to the Google Container Registry (GCR)
        run: |-
          docker push gcr.io/$PROJECT_ID/$REPO_NAME:$GITHUB_SHA
      - name: Deploy
        run: |-
            gcloud run deploy $REPO_NAME \
            --region $REGION \
            --image gcr.io/$PROJECT_ID/$REPO_NAME:$GITHUB_SHA \
            --platform "managed" \
            --allow-unauthenticated \
            --port 3000 \
            --quiet \
            --add-cloudsql-instances $INSTANCE_CONNECTION_NAME \
            --set-env-vars INSTANCE_UNIX_SOCKET="/cloudsql/$INSTANCE_CONNECTION_NAME" \
            --set-env-vars INSTANCE_CONNECTION_NAME="$INSTANCE_CONNECTION_NAME" \
            --set-env-vars DB_NAME="$DB_NAME" \
            --set-env-vars DB_USER="$DB_USER" \
            --set-env-vars DB_PASS="$DB_PASS" \
            --set-env-vars DATABASE_URL="$DATABASE_URL" \  

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
  database-migrate:
    name: Database Migrate
    runs-on: ubuntu-latest
    needs: build-and-deploy
    steps:
      - name: Download SQL Auth Proxy
        run: "wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy"
    
      - name: Make the Cloud SQL Auth proxy executable
        run: "chmod +x cloud_sql_proxy"
    
      - name: Start the Cloud SQL proxy
        run: "./cloud_sql_proxy -instances=$INSTANCE_CONNECTION_ & npx prisma migrate deploy"    